# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: encryption.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)




DESCRIPTOR = _descriptor.FileDescriptor(
  name='encryption.proto',
  package='sync_pb',
  serialized_pb='\n\x10\x65ncryption.proto\x12\x07sync_pb\"/\n\rEncryptedData\x12\x10\n\x08key_name\x18\x01 \x01(\t\x12\x0c\n\x04\x62lob\x18\x02 \x01(\tB\x04H\x03`\x01')




_ENCRYPTEDDATA = _descriptor.Descriptor(
  name='EncryptedData',
  full_name='sync_pb.EncryptedData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key_name', full_name='sync_pb.EncryptedData.key_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='blob', full_name='sync_pb.EncryptedData.blob', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=29,
  serialized_end=76,
)

DESCRIPTOR.message_types_by_name['EncryptedData'] = _ENCRYPTEDDATA

class EncryptedData(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _ENCRYPTEDDATA

  # @@protoc_insertion_point(class_scope:sync_pb.EncryptedData)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), 'H\003`\001')
# @@protoc_insertion_point(module_scope)
