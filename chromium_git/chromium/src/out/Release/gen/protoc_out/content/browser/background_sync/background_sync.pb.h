// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: background_sync.proto

#ifndef PROTOBUF_background_5fsync_2eproto__INCLUDED
#define PROTOBUF_background_5fsync_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace content {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_background_5fsync_2eproto();
void protobuf_AssignDesc_background_5fsync_2eproto();
void protobuf_ShutdownFile_background_5fsync_2eproto();

class BackgroundSyncRegistrationProto;
class BackgroundSyncRegistrationsProto;

enum SyncNetworkState {
  NETWORK_STATE_ANY = 0,
  NETWORK_STATE_AVOID_CELLULAR = 1,
  NETWORK_STATE_ONLINE = 2
};
bool SyncNetworkState_IsValid(int value);
const SyncNetworkState SyncNetworkState_MIN = NETWORK_STATE_ANY;
const SyncNetworkState SyncNetworkState_MAX = NETWORK_STATE_ONLINE;
const int SyncNetworkState_ARRAYSIZE = SyncNetworkState_MAX + 1;

// ===================================================================

class BackgroundSyncRegistrationProto : public ::google::protobuf::MessageLite {
 public:
  BackgroundSyncRegistrationProto();
  virtual ~BackgroundSyncRegistrationProto();

  BackgroundSyncRegistrationProto(const BackgroundSyncRegistrationProto& from);

  inline BackgroundSyncRegistrationProto& operator=(const BackgroundSyncRegistrationProto& from) {
    CopyFrom(from);
    return *this;
  }

  static const BackgroundSyncRegistrationProto& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const BackgroundSyncRegistrationProto* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(BackgroundSyncRegistrationProto* other);

  // implements Message ----------------------------------------------

  BackgroundSyncRegistrationProto* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BackgroundSyncRegistrationProto& from);
  void MergeFrom(const BackgroundSyncRegistrationProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // required string tag = 2;
  inline bool has_tag() const;
  inline void clear_tag();
  static const int kTagFieldNumber = 2;
  inline const ::std::string& tag() const;
  inline void set_tag(const ::std::string& value);
  inline void set_tag(const char* value);
  inline void set_tag(const char* value, size_t size);
  inline ::std::string* mutable_tag();
  inline ::std::string* release_tag();
  inline void set_allocated_tag(::std::string* tag);

  // required .content.SyncNetworkState network_state = 5;
  inline bool has_network_state() const;
  inline void clear_network_state();
  static const int kNetworkStateFieldNumber = 5;
  inline ::content::SyncNetworkState network_state() const;
  inline void set_network_state(::content::SyncNetworkState value);

  // required int32 num_attempts = 7;
  inline bool has_num_attempts() const;
  inline void clear_num_attempts();
  static const int kNumAttemptsFieldNumber = 7;
  inline ::google::protobuf::int32 num_attempts() const;
  inline void set_num_attempts(::google::protobuf::int32 value);

  // required int64 delay_until = 8;
  inline bool has_delay_until() const;
  inline void clear_delay_until();
  static const int kDelayUntilFieldNumber = 8;
  inline ::google::protobuf::int64 delay_until() const;
  inline void set_delay_until(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:content.BackgroundSyncRegistrationProto)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_tag();
  inline void clear_has_tag();
  inline void set_has_network_state();
  inline void clear_has_network_state();
  inline void set_has_num_attempts();
  inline void clear_has_num_attempts();
  inline void set_has_delay_until();
  inline void clear_has_delay_until();

  ::google::protobuf::int64 id_;
  ::std::string* tag_;
  int network_state_;
  ::google::protobuf::int32 num_attempts_;
  ::google::protobuf::int64 delay_until_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_background_5fsync_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_background_5fsync_2eproto();
  #endif
  friend void protobuf_AssignDesc_background_5fsync_2eproto();
  friend void protobuf_ShutdownFile_background_5fsync_2eproto();

  void InitAsDefaultInstance();
  static BackgroundSyncRegistrationProto* default_instance_;
};
// -------------------------------------------------------------------

class BackgroundSyncRegistrationsProto : public ::google::protobuf::MessageLite {
 public:
  BackgroundSyncRegistrationsProto();
  virtual ~BackgroundSyncRegistrationsProto();

  BackgroundSyncRegistrationsProto(const BackgroundSyncRegistrationsProto& from);

  inline BackgroundSyncRegistrationsProto& operator=(const BackgroundSyncRegistrationsProto& from) {
    CopyFrom(from);
    return *this;
  }

  static const BackgroundSyncRegistrationsProto& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const BackgroundSyncRegistrationsProto* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(BackgroundSyncRegistrationsProto* other);

  // implements Message ----------------------------------------------

  BackgroundSyncRegistrationsProto* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BackgroundSyncRegistrationsProto& from);
  void MergeFrom(const BackgroundSyncRegistrationsProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .content.BackgroundSyncRegistrationProto registration = 1;
  inline int registration_size() const;
  inline void clear_registration();
  static const int kRegistrationFieldNumber = 1;
  inline const ::content::BackgroundSyncRegistrationProto& registration(int index) const;
  inline ::content::BackgroundSyncRegistrationProto* mutable_registration(int index);
  inline ::content::BackgroundSyncRegistrationProto* add_registration();
  inline const ::google::protobuf::RepeatedPtrField< ::content::BackgroundSyncRegistrationProto >&
      registration() const;
  inline ::google::protobuf::RepeatedPtrField< ::content::BackgroundSyncRegistrationProto >*
      mutable_registration();

  // required int64 next_registration_id = 2;
  inline bool has_next_registration_id() const;
  inline void clear_next_registration_id();
  static const int kNextRegistrationIdFieldNumber = 2;
  inline ::google::protobuf::int64 next_registration_id() const;
  inline void set_next_registration_id(::google::protobuf::int64 value);

  // required string origin = 3;
  inline bool has_origin() const;
  inline void clear_origin();
  static const int kOriginFieldNumber = 3;
  inline const ::std::string& origin() const;
  inline void set_origin(const ::std::string& value);
  inline void set_origin(const char* value);
  inline void set_origin(const char* value, size_t size);
  inline ::std::string* mutable_origin();
  inline ::std::string* release_origin();
  inline void set_allocated_origin(::std::string* origin);

  // @@protoc_insertion_point(class_scope:content.BackgroundSyncRegistrationsProto)
 private:
  inline void set_has_next_registration_id();
  inline void clear_has_next_registration_id();
  inline void set_has_origin();
  inline void clear_has_origin();

  ::google::protobuf::RepeatedPtrField< ::content::BackgroundSyncRegistrationProto > registration_;
  ::google::protobuf::int64 next_registration_id_;
  ::std::string* origin_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_background_5fsync_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_background_5fsync_2eproto();
  #endif
  friend void protobuf_AssignDesc_background_5fsync_2eproto();
  friend void protobuf_ShutdownFile_background_5fsync_2eproto();

  void InitAsDefaultInstance();
  static BackgroundSyncRegistrationsProto* default_instance_;
};
// ===================================================================


// ===================================================================

// BackgroundSyncRegistrationProto

// required int64 id = 1;
inline bool BackgroundSyncRegistrationProto::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BackgroundSyncRegistrationProto::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BackgroundSyncRegistrationProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BackgroundSyncRegistrationProto::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 BackgroundSyncRegistrationProto::id() const {
  return id_;
}
inline void BackgroundSyncRegistrationProto::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// required string tag = 2;
inline bool BackgroundSyncRegistrationProto::has_tag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BackgroundSyncRegistrationProto::set_has_tag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BackgroundSyncRegistrationProto::clear_has_tag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BackgroundSyncRegistrationProto::clear_tag() {
  if (tag_ != &::google::protobuf::internal::GetEmptyString()) {
    tag_->clear();
  }
  clear_has_tag();
}
inline const ::std::string& BackgroundSyncRegistrationProto::tag() const {
  return *tag_;
}
inline void BackgroundSyncRegistrationProto::set_tag(const ::std::string& value) {
  set_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyString()) {
    tag_ = new ::std::string;
  }
  tag_->assign(value);
}
inline void BackgroundSyncRegistrationProto::set_tag(const char* value) {
  set_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyString()) {
    tag_ = new ::std::string;
  }
  tag_->assign(value);
}
inline void BackgroundSyncRegistrationProto::set_tag(const char* value, size_t size) {
  set_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyString()) {
    tag_ = new ::std::string;
  }
  tag_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BackgroundSyncRegistrationProto::mutable_tag() {
  set_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyString()) {
    tag_ = new ::std::string;
  }
  return tag_;
}
inline ::std::string* BackgroundSyncRegistrationProto::release_tag() {
  clear_has_tag();
  if (tag_ == &::google::protobuf::internal::GetEmptyString()) {
    return NULL;
  } else {
    ::std::string* temp = tag_;
    tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyString());
    return temp;
  }
}
inline void BackgroundSyncRegistrationProto::set_allocated_tag(::std::string* tag) {
  if (tag_ != &::google::protobuf::internal::GetEmptyString()) {
    delete tag_;
  }
  if (tag) {
    set_has_tag();
    tag_ = tag;
  } else {
    clear_has_tag();
    tag_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyString());
  }
}

// required .content.SyncNetworkState network_state = 5;
inline bool BackgroundSyncRegistrationProto::has_network_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BackgroundSyncRegistrationProto::set_has_network_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BackgroundSyncRegistrationProto::clear_has_network_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BackgroundSyncRegistrationProto::clear_network_state() {
  network_state_ = 0;
  clear_has_network_state();
}
inline ::content::SyncNetworkState BackgroundSyncRegistrationProto::network_state() const {
  return static_cast< ::content::SyncNetworkState >(network_state_);
}
inline void BackgroundSyncRegistrationProto::set_network_state(::content::SyncNetworkState value) {
  assert(::content::SyncNetworkState_IsValid(value));
  set_has_network_state();
  network_state_ = value;
}

// required int32 num_attempts = 7;
inline bool BackgroundSyncRegistrationProto::has_num_attempts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BackgroundSyncRegistrationProto::set_has_num_attempts() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BackgroundSyncRegistrationProto::clear_has_num_attempts() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BackgroundSyncRegistrationProto::clear_num_attempts() {
  num_attempts_ = 0;
  clear_has_num_attempts();
}
inline ::google::protobuf::int32 BackgroundSyncRegistrationProto::num_attempts() const {
  return num_attempts_;
}
inline void BackgroundSyncRegistrationProto::set_num_attempts(::google::protobuf::int32 value) {
  set_has_num_attempts();
  num_attempts_ = value;
}

// required int64 delay_until = 8;
inline bool BackgroundSyncRegistrationProto::has_delay_until() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BackgroundSyncRegistrationProto::set_has_delay_until() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BackgroundSyncRegistrationProto::clear_has_delay_until() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BackgroundSyncRegistrationProto::clear_delay_until() {
  delay_until_ = GOOGLE_LONGLONG(0);
  clear_has_delay_until();
}
inline ::google::protobuf::int64 BackgroundSyncRegistrationProto::delay_until() const {
  return delay_until_;
}
inline void BackgroundSyncRegistrationProto::set_delay_until(::google::protobuf::int64 value) {
  set_has_delay_until();
  delay_until_ = value;
}

// -------------------------------------------------------------------

// BackgroundSyncRegistrationsProto

// repeated .content.BackgroundSyncRegistrationProto registration = 1;
inline int BackgroundSyncRegistrationsProto::registration_size() const {
  return registration_.size();
}
inline void BackgroundSyncRegistrationsProto::clear_registration() {
  registration_.Clear();
}
inline const ::content::BackgroundSyncRegistrationProto& BackgroundSyncRegistrationsProto::registration(int index) const {
  return registration_.Get(index);
}
inline ::content::BackgroundSyncRegistrationProto* BackgroundSyncRegistrationsProto::mutable_registration(int index) {
  return registration_.Mutable(index);
}
inline ::content::BackgroundSyncRegistrationProto* BackgroundSyncRegistrationsProto::add_registration() {
  return registration_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::content::BackgroundSyncRegistrationProto >&
BackgroundSyncRegistrationsProto::registration() const {
  return registration_;
}
inline ::google::protobuf::RepeatedPtrField< ::content::BackgroundSyncRegistrationProto >*
BackgroundSyncRegistrationsProto::mutable_registration() {
  return &registration_;
}

// required int64 next_registration_id = 2;
inline bool BackgroundSyncRegistrationsProto::has_next_registration_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BackgroundSyncRegistrationsProto::set_has_next_registration_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BackgroundSyncRegistrationsProto::clear_has_next_registration_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BackgroundSyncRegistrationsProto::clear_next_registration_id() {
  next_registration_id_ = GOOGLE_LONGLONG(0);
  clear_has_next_registration_id();
}
inline ::google::protobuf::int64 BackgroundSyncRegistrationsProto::next_registration_id() const {
  return next_registration_id_;
}
inline void BackgroundSyncRegistrationsProto::set_next_registration_id(::google::protobuf::int64 value) {
  set_has_next_registration_id();
  next_registration_id_ = value;
}

// required string origin = 3;
inline bool BackgroundSyncRegistrationsProto::has_origin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BackgroundSyncRegistrationsProto::set_has_origin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BackgroundSyncRegistrationsProto::clear_has_origin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BackgroundSyncRegistrationsProto::clear_origin() {
  if (origin_ != &::google::protobuf::internal::GetEmptyString()) {
    origin_->clear();
  }
  clear_has_origin();
}
inline const ::std::string& BackgroundSyncRegistrationsProto::origin() const {
  return *origin_;
}
inline void BackgroundSyncRegistrationsProto::set_origin(const ::std::string& value) {
  set_has_origin();
  if (origin_ == &::google::protobuf::internal::GetEmptyString()) {
    origin_ = new ::std::string;
  }
  origin_->assign(value);
}
inline void BackgroundSyncRegistrationsProto::set_origin(const char* value) {
  set_has_origin();
  if (origin_ == &::google::protobuf::internal::GetEmptyString()) {
    origin_ = new ::std::string;
  }
  origin_->assign(value);
}
inline void BackgroundSyncRegistrationsProto::set_origin(const char* value, size_t size) {
  set_has_origin();
  if (origin_ == &::google::protobuf::internal::GetEmptyString()) {
    origin_ = new ::std::string;
  }
  origin_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BackgroundSyncRegistrationsProto::mutable_origin() {
  set_has_origin();
  if (origin_ == &::google::protobuf::internal::GetEmptyString()) {
    origin_ = new ::std::string;
  }
  return origin_;
}
inline ::std::string* BackgroundSyncRegistrationsProto::release_origin() {
  clear_has_origin();
  if (origin_ == &::google::protobuf::internal::GetEmptyString()) {
    return NULL;
  } else {
    ::std::string* temp = origin_;
    origin_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyString());
    return temp;
  }
}
inline void BackgroundSyncRegistrationsProto::set_allocated_origin(::std::string* origin) {
  if (origin_ != &::google::protobuf::internal::GetEmptyString()) {
    delete origin_;
  }
  if (origin) {
    set_has_origin();
    origin_ = origin;
  } else {
    clear_has_origin();
    origin_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyString());
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace content

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_background_5fsync_2eproto__INCLUDED
