// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: size.proto

#ifndef PROTOBUF_size_2eproto__INCLUDED
#define PROTOBUF_size_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)
#include "cc/proto/cc_proto_export.h"

namespace cc {
namespace proto {

// Internal implementation detail -- do not call these.
void CC_PROTO_EXPORT protobuf_AddDesc_size_2eproto();
void protobuf_AssignDesc_size_2eproto();
void protobuf_ShutdownFile_size_2eproto();

class Size;

// ===================================================================

class CC_PROTO_EXPORT Size : public ::google::protobuf::MessageLite {
 public:
  Size();
  virtual ~Size();

  Size(const Size& from);

  inline Size& operator=(const Size& from) {
    CopyFrom(from);
    return *this;
  }

  static const Size& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Size* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Size* other);

  // implements Message ----------------------------------------------

  Size* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Size& from);
  void MergeFrom(const Size& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 width = 1;
  inline bool has_width() const;
  inline void clear_width();
  static const int kWidthFieldNumber = 1;
  inline ::google::protobuf::int64 width() const;
  inline void set_width(::google::protobuf::int64 value);

  // optional int64 height = 2;
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 2;
  inline ::google::protobuf::int64 height() const;
  inline void set_height(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:cc.proto.Size)
 private:
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();

  ::google::protobuf::int64 width_;
  ::google::protobuf::int64 height_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void CC_PROTO_EXPORT protobuf_AddDesc_size_2eproto_impl();
  #else
  friend void CC_PROTO_EXPORT protobuf_AddDesc_size_2eproto();
  #endif
  friend void protobuf_AssignDesc_size_2eproto();
  friend void protobuf_ShutdownFile_size_2eproto();

  void InitAsDefaultInstance();
  static Size* default_instance_;
};
// ===================================================================


// ===================================================================

// Size

// optional int64 width = 1;
inline bool Size::has_width() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Size::set_has_width() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Size::clear_has_width() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Size::clear_width() {
  width_ = GOOGLE_LONGLONG(0);
  clear_has_width();
}
inline ::google::protobuf::int64 Size::width() const {
  return width_;
}
inline void Size::set_width(::google::protobuf::int64 value) {
  set_has_width();
  width_ = value;
}

// optional int64 height = 2;
inline bool Size::has_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Size::set_has_height() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Size::clear_has_height() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Size::clear_height() {
  height_ = GOOGLE_LONGLONG(0);
  clear_has_height();
}
inline ::google::protobuf::int64 Size::height() const {
  return height_;
}
inline void Size::set_height(::google::protobuf::int64 value) {
  set_has_height();
  height_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace cc

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_size_2eproto__INCLUDED
