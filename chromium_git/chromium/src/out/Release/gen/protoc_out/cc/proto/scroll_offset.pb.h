// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scroll_offset.proto

#ifndef PROTOBUF_scroll_5foffset_2eproto__INCLUDED
#define PROTOBUF_scroll_5foffset_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)
#include "cc/proto/cc_proto_export.h"

namespace cc {
namespace proto {

// Internal implementation detail -- do not call these.
void CC_PROTO_EXPORT protobuf_AddDesc_scroll_5foffset_2eproto();
void protobuf_AssignDesc_scroll_5foffset_2eproto();
void protobuf_ShutdownFile_scroll_5foffset_2eproto();

class ScrollOffset;

// ===================================================================

class CC_PROTO_EXPORT ScrollOffset : public ::google::protobuf::MessageLite {
 public:
  ScrollOffset();
  virtual ~ScrollOffset();

  ScrollOffset(const ScrollOffset& from);

  inline ScrollOffset& operator=(const ScrollOffset& from) {
    CopyFrom(from);
    return *this;
  }

  static const ScrollOffset& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ScrollOffset* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ScrollOffset* other);

  // implements Message ----------------------------------------------

  ScrollOffset* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ScrollOffset& from);
  void MergeFrom(const ScrollOffset& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline double x() const;
  inline void set_x(double value);

  // optional double y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline double y() const;
  inline void set_y(double value);

  // @@protoc_insertion_point(class_scope:cc.proto.ScrollOffset)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  double x_;
  double y_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void CC_PROTO_EXPORT protobuf_AddDesc_scroll_5foffset_2eproto_impl();
  #else
  friend void CC_PROTO_EXPORT protobuf_AddDesc_scroll_5foffset_2eproto();
  #endif
  friend void protobuf_AssignDesc_scroll_5foffset_2eproto();
  friend void protobuf_ShutdownFile_scroll_5foffset_2eproto();

  void InitAsDefaultInstance();
  static ScrollOffset* default_instance_;
};
// ===================================================================


// ===================================================================

// ScrollOffset

// optional double x = 1;
inline bool ScrollOffset::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScrollOffset::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScrollOffset::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScrollOffset::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline double ScrollOffset::x() const {
  return x_;
}
inline void ScrollOffset::set_x(double value) {
  set_has_x();
  x_ = value;
}

// optional double y = 2;
inline bool ScrollOffset::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ScrollOffset::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ScrollOffset::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ScrollOffset::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline double ScrollOffset::y() const {
  return y_;
}
inline void ScrollOffset::set_y(double value) {
  set_has_y();
  y_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace cc

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_scroll_5foffset_2eproto__INCLUDED
