// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: layer_position_constraint.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "layer_position_constraint.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace cc {
namespace proto {

void protobuf_ShutdownFile_layer_5fposition_5fconstraint_2eproto() {
  delete LayerPositionConstraint::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_layer_5fposition_5fconstraint_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_layer_5fposition_5fconstraint_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  LayerPositionConstraint::default_instance_ = new LayerPositionConstraint();
  LayerPositionConstraint::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_layer_5fposition_5fconstraint_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_layer_5fposition_5fconstraint_2eproto_once_);
void protobuf_AddDesc_layer_5fposition_5fconstraint_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_layer_5fposition_5fconstraint_2eproto_once_,
                 &protobuf_AddDesc_layer_5fposition_5fconstraint_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_layer_5fposition_5fconstraint_2eproto {
  StaticDescriptorInitializer_layer_5fposition_5fconstraint_2eproto() {
    protobuf_AddDesc_layer_5fposition_5fconstraint_2eproto();
  }
} static_descriptor_initializer_layer_5fposition_5fconstraint_2eproto_;
#endif

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LayerPositionConstraint::kIsFixedPositionFieldNumber;
const int LayerPositionConstraint::kIsFixedToRightEdgeFieldNumber;
const int LayerPositionConstraint::kIsFixedToBottomEdgeFieldNumber;
#endif  // !_MSC_VER

LayerPositionConstraint::LayerPositionConstraint()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
}

void LayerPositionConstraint::InitAsDefaultInstance() {
}

LayerPositionConstraint::LayerPositionConstraint(const LayerPositionConstraint& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
}

void LayerPositionConstraint::SharedCtor() {
  _cached_size_ = 0;
  is_fixed_position_ = false;
  is_fixed_to_right_edge_ = false;
  is_fixed_to_bottom_edge_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LayerPositionConstraint::~LayerPositionConstraint() {
  SharedDtor();
}

void LayerPositionConstraint::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void LayerPositionConstraint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const LayerPositionConstraint& LayerPositionConstraint::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_layer_5fposition_5fconstraint_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_layer_5fposition_5fconstraint_2eproto();
#endif
  return *default_instance_;
}

LayerPositionConstraint* LayerPositionConstraint::default_instance_ = NULL;

LayerPositionConstraint* LayerPositionConstraint::New() const {
  return new LayerPositionConstraint;
}

void LayerPositionConstraint::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    is_fixed_position_ = false;
    is_fixed_to_right_edge_ = false;
    is_fixed_to_bottom_edge_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

bool LayerPositionConstraint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool is_fixed_position = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_fixed_position_)));
          set_has_is_fixed_position();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_is_fixed_to_right_edge;
        break;
      }

      // optional bool is_fixed_to_right_edge = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_fixed_to_right_edge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_fixed_to_right_edge_)));
          set_has_is_fixed_to_right_edge();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_is_fixed_to_bottom_edge;
        break;
      }

      // optional bool is_fixed_to_bottom_edge = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_fixed_to_bottom_edge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_fixed_to_bottom_edge_)));
          set_has_is_fixed_to_bottom_edge();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag, NULL));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void LayerPositionConstraint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bool is_fixed_position = 1;
  if (has_is_fixed_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_fixed_position(), output);
  }

  // optional bool is_fixed_to_right_edge = 2;
  if (has_is_fixed_to_right_edge()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_fixed_to_right_edge(), output);
  }

  // optional bool is_fixed_to_bottom_edge = 3;
  if (has_is_fixed_to_bottom_edge()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_fixed_to_bottom_edge(), output);
  }

}

int LayerPositionConstraint::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool is_fixed_position = 1;
    if (has_is_fixed_position()) {
      total_size += 1 + 1;
    }

    // optional bool is_fixed_to_right_edge = 2;
    if (has_is_fixed_to_right_edge()) {
      total_size += 1 + 1;
    }

    // optional bool is_fixed_to_bottom_edge = 3;
    if (has_is_fixed_to_bottom_edge()) {
      total_size += 1 + 1;
    }

  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LayerPositionConstraint::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const LayerPositionConstraint*>(&from));
}

void LayerPositionConstraint::MergeFrom(const LayerPositionConstraint& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_is_fixed_position()) {
      set_is_fixed_position(from.is_fixed_position());
    }
    if (from.has_is_fixed_to_right_edge()) {
      set_is_fixed_to_right_edge(from.is_fixed_to_right_edge());
    }
    if (from.has_is_fixed_to_bottom_edge()) {
      set_is_fixed_to_bottom_edge(from.is_fixed_to_bottom_edge());
    }
  }
}

void LayerPositionConstraint::CopyFrom(const LayerPositionConstraint& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LayerPositionConstraint::IsInitialized() const {

  return true;
}

void LayerPositionConstraint::Swap(LayerPositionConstraint* other) {
  if (other != this) {
    std::swap(is_fixed_position_, other->is_fixed_position_);
    std::swap(is_fixed_to_right_edge_, other->is_fixed_to_right_edge_);
    std::swap(is_fixed_to_bottom_edge_, other->is_fixed_to_bottom_edge_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string LayerPositionConstraint::GetTypeName() const {
  return "cc.proto.LayerPositionConstraint";
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace cc

// @@protoc_insertion_point(global_scope)
