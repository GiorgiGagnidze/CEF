
// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by:
//     mojo/public/tools/bindings/mojom_bindings_generator.py
// For:
//     mojo/shell/public/interfaces/application_manager.mojom
//

package org.chromium.mojom.mojo.shell.mojom;

import org.chromium.base.annotations.SuppressFBWarnings;


class ApplicationManagerListener_Internal {

    public static final org.chromium.mojo.bindings.Interface.Manager<ApplicationManagerListener, ApplicationManagerListener.Proxy> MANAGER =
            new org.chromium.mojo.bindings.Interface.Manager<ApplicationManagerListener, ApplicationManagerListener.Proxy>() {
    
        public String getName() {
            return "mojo::shell::mojom::ApplicationManagerListener";
        }
    
        public int getVersion() {
          return 0;
        }
    
        public Proxy buildProxy(org.chromium.mojo.system.Core core,
                                org.chromium.mojo.bindings.MessageReceiverWithResponder messageReceiver) {
            return new Proxy(core, messageReceiver);
        }
    
        public Stub buildStub(org.chromium.mojo.system.Core core, ApplicationManagerListener impl) {
            return new Stub(core, impl);
        }
    
        public ApplicationManagerListener[] buildArray(int size) {
          return new ApplicationManagerListener[size];
        }
    };


    private static final int SET_RUNNING_APPLICATIONS_ORDINAL = 0;

    private static final int APPLICATION_INSTANCE_CREATED_ORDINAL = 1;

    private static final int APPLICATION_INSTANCE_DESTROYED_ORDINAL = 2;

    private static final int APPLICATION_PID_AVAILABLE_ORDINAL = 3;


    static final class Proxy extends org.chromium.mojo.bindings.Interface.AbstractProxy implements ApplicationManagerListener.Proxy {

        Proxy(org.chromium.mojo.system.Core core,
              org.chromium.mojo.bindings.MessageReceiverWithResponder messageReceiver) {
            super(core, messageReceiver);
        }


        @Override
        public void setRunningApplications(
ApplicationInfo[] applications) {

            ApplicationManagerListenerSetRunningApplicationsParams _message = new ApplicationManagerListenerSetRunningApplicationsParams();

            _message.applications = applications;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(SET_RUNNING_APPLICATIONS_ORDINAL)));

        }


        @Override
        public void applicationInstanceCreated(
ApplicationInfo application) {

            ApplicationManagerListenerApplicationInstanceCreatedParams _message = new ApplicationManagerListenerApplicationInstanceCreatedParams();

            _message.application = application;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(APPLICATION_INSTANCE_CREATED_ORDINAL)));

        }


        @Override
        public void applicationInstanceDestroyed(
int id) {

            ApplicationManagerListenerApplicationInstanceDestroyedParams _message = new ApplicationManagerListenerApplicationInstanceDestroyedParams();

            _message.id = id;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(APPLICATION_INSTANCE_DESTROYED_ORDINAL)));

        }


        @Override
        public void applicationPidAvailable(
int id, int pid) {

            ApplicationManagerListenerApplicationPidAvailableParams _message = new ApplicationManagerListenerApplicationPidAvailableParams();

            _message.id = id;

            _message.pid = pid;


            getProxyHandler().getMessageReceiver().accept(
                    _message.serializeWithHeader(
                            getProxyHandler().getCore(),
                            new org.chromium.mojo.bindings.MessageHeader(APPLICATION_PID_AVAILABLE_ORDINAL)));

        }


    }

    static final class Stub extends org.chromium.mojo.bindings.Interface.Stub<ApplicationManagerListener> {

        Stub(org.chromium.mojo.system.Core core, ApplicationManagerListener impl) {
            super(core, impl);
        }

        @Override
        public boolean accept(org.chromium.mojo.bindings.Message message) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                if (!header.validateHeader(org.chromium.mojo.bindings.MessageHeader.NO_FLAG)) {
                    return false;
                }
                switch(header.getType()) {
            
                    case org.chromium.mojo.bindings.InterfaceControlMessagesConstants.RUN_OR_CLOSE_PIPE_MESSAGE_ID:
                        return org.chromium.mojo.bindings.InterfaceControlMessagesHelper.handleRunOrClosePipe(
                                ApplicationManagerListener_Internal.MANAGER, messageWithHeader);
            
            
            
            
            
                    case SET_RUNNING_APPLICATIONS_ORDINAL: {
            
                        ApplicationManagerListenerSetRunningApplicationsParams data =
                                ApplicationManagerListenerSetRunningApplicationsParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().setRunningApplications(data.applications);
                        return true;
                    }
            
            
            
            
            
                    case APPLICATION_INSTANCE_CREATED_ORDINAL: {
            
                        ApplicationManagerListenerApplicationInstanceCreatedParams data =
                                ApplicationManagerListenerApplicationInstanceCreatedParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().applicationInstanceCreated(data.application);
                        return true;
                    }
            
            
            
            
            
                    case APPLICATION_INSTANCE_DESTROYED_ORDINAL: {
            
                        ApplicationManagerListenerApplicationInstanceDestroyedParams data =
                                ApplicationManagerListenerApplicationInstanceDestroyedParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().applicationInstanceDestroyed(data.id);
                        return true;
                    }
            
            
            
            
            
                    case APPLICATION_PID_AVAILABLE_ORDINAL: {
            
                        ApplicationManagerListenerApplicationPidAvailableParams data =
                                ApplicationManagerListenerApplicationPidAvailableParams.deserialize(messageWithHeader.getPayload());
            
                        getImpl().applicationPidAvailable(data.id, data.pid);
                        return true;
                    }
            
            
                    default:
                        return false;
                }
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                System.err.println(e.toString());
                return false;
            }
        }

        @Override
        public boolean acceptWithResponder(org.chromium.mojo.bindings.Message message, org.chromium.mojo.bindings.MessageReceiver receiver) {
            try {
                org.chromium.mojo.bindings.ServiceMessage messageWithHeader =
                        message.asServiceMessage();
                org.chromium.mojo.bindings.MessageHeader header = messageWithHeader.getHeader();
                if (!header.validateHeader(org.chromium.mojo.bindings.MessageHeader.MESSAGE_EXPECTS_RESPONSE_FLAG)) {
                    return false;
                }
                switch(header.getType()) {
            
                    case org.chromium.mojo.bindings.InterfaceControlMessagesConstants.RUN_MESSAGE_ID:
                        return org.chromium.mojo.bindings.InterfaceControlMessagesHelper.handleRun(
                                getCore(), ApplicationManagerListener_Internal.MANAGER, messageWithHeader, receiver);
            
            
            
            
            
            
            
            
            
            
                    default:
                        return false;
                }
            } catch (org.chromium.mojo.bindings.DeserializationException e) {
                System.err.println(e.toString());
                return false;
            }
        }
    }


    
    static final class ApplicationManagerListenerSetRunningApplicationsParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public ApplicationInfo[] applications;
    
    
    
        private ApplicationManagerListenerSetRunningApplicationsParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
        }
    
        public ApplicationManagerListenerSetRunningApplicationsParams() {
            this(0);
        }
    
        public static ApplicationManagerListenerSetRunningApplicationsParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static ApplicationManagerListenerSetRunningApplicationsParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            ApplicationManagerListenerSetRunningApplicationsParams result = new ApplicationManagerListenerSetRunningApplicationsParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(8, false);
                
                
                {
                
                
                    org.chromium.mojo.bindings.DataHeader si1 = decoder1.readDataHeaderForPointerArray(org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                    result.applications = new ApplicationInfo[si1.elementsOrVersion];
                    for (int i1 = 0; i1 < si1.elementsOrVersion; ++i1) {
                        
                        
                        org.chromium.mojo.bindings.Decoder decoder2 = decoder1.readPointer(org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i1, false);
                        
                        result.applications[i1] = ApplicationInfo.decode(decoder2);
                        
                        
                    }
                
                }
                
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            
            
            if (applications == null) {
                encoder0.encodeNullPointer(8, false);
            } else {
            
            
            
            
                org.chromium.mojo.bindings.Encoder encoder1 = encoder0.encodePointerArray(applications.length, 8, org.chromium.mojo.bindings.BindingsHelper.UNSPECIFIED_ARRAY_LENGTH);
                for (int i0 = 0; i0 < applications.length; ++i0) {
                    
                    
                    encoder1.encode(applications[i0], org.chromium.mojo.bindings.DataHeader.HEADER_SIZE + org.chromium.mojo.bindings.BindingsHelper.POINTER_SIZE * i0, false);
                    
                }
            }
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            ApplicationManagerListenerSetRunningApplicationsParams other = (ApplicationManagerListenerSetRunningApplicationsParams) object;
    
            if (!java.util.Arrays.deepEquals(this.applications, other.applications))
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + java.util.Arrays.deepHashCode(applications);
    
            return result;
        }
    }



    
    static final class ApplicationManagerListenerApplicationInstanceCreatedParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public ApplicationInfo application;
    
    
    
        private ApplicationManagerListenerApplicationInstanceCreatedParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
        }
    
        public ApplicationManagerListenerApplicationInstanceCreatedParams() {
            this(0);
        }
    
        public static ApplicationManagerListenerApplicationInstanceCreatedParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static ApplicationManagerListenerApplicationInstanceCreatedParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            ApplicationManagerListenerApplicationInstanceCreatedParams result = new ApplicationManagerListenerApplicationInstanceCreatedParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                org.chromium.mojo.bindings.Decoder decoder1 = decoder0.readPointer(8, false);
                
                result.application = ApplicationInfo.decode(decoder1);
                
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(application, 8, false);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            ApplicationManagerListenerApplicationInstanceCreatedParams other = (ApplicationManagerListenerApplicationInstanceCreatedParams) object;
    
            if (!org.chromium.mojo.bindings.BindingsHelper.equals(this.application, other.application))
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(application);
    
            return result;
        }
    }



    
    static final class ApplicationManagerListenerApplicationInstanceDestroyedParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public int id;
    
    
    
        private ApplicationManagerListenerApplicationInstanceDestroyedParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
        }
    
        public ApplicationManagerListenerApplicationInstanceDestroyedParams() {
            this(0);
        }
    
        public static ApplicationManagerListenerApplicationInstanceDestroyedParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static ApplicationManagerListenerApplicationInstanceDestroyedParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            ApplicationManagerListenerApplicationInstanceDestroyedParams result = new ApplicationManagerListenerApplicationInstanceDestroyedParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.id = decoder0.readInt(8);
                
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(id, 8);
            
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            ApplicationManagerListenerApplicationInstanceDestroyedParams other = (ApplicationManagerListenerApplicationInstanceDestroyedParams) object;
    
            if (this.id != other.id)
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(id);
    
            return result;
        }
    }



    
    static final class ApplicationManagerListenerApplicationPidAvailableParams extends org.chromium.mojo.bindings.Struct {
    
        private static final int STRUCT_SIZE = 16;
        private static final org.chromium.mojo.bindings.DataHeader[] VERSION_ARRAY = new org.chromium.mojo.bindings.DataHeader[] {new org.chromium.mojo.bindings.DataHeader(16, 0)};
        private static final org.chromium.mojo.bindings.DataHeader DEFAULT_STRUCT_INFO = VERSION_ARRAY[0];
    
    
    
    
    
        public int id;
    
        public int pid;
    
    
    
        private ApplicationManagerListenerApplicationPidAvailableParams(int version) {
            super(STRUCT_SIZE, version);
    
    
    
    
    
        }
    
        public ApplicationManagerListenerApplicationPidAvailableParams() {
            this(0);
        }
    
        public static ApplicationManagerListenerApplicationPidAvailableParams deserialize(org.chromium.mojo.bindings.Message message) {
            return decode(new org.chromium.mojo.bindings.Decoder(message));
        }
    
        @SuppressWarnings("unchecked")
        public static ApplicationManagerListenerApplicationPidAvailableParams decode(org.chromium.mojo.bindings.Decoder decoder0) {
            if (decoder0 == null) {
                return null;
            }
            org.chromium.mojo.bindings.DataHeader mainDataHeader = decoder0.readAndValidateDataHeader(VERSION_ARRAY);
            ApplicationManagerListenerApplicationPidAvailableParams result = new ApplicationManagerListenerApplicationPidAvailableParams(mainDataHeader.elementsOrVersion);
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.id = decoder0.readInt(8);
                
            }
    
    
    
    
    
    
    
    
    
            if (mainDataHeader.elementsOrVersion >= 0) {
                
                
                result.pid = decoder0.readInt(12);
                
            }
    
    
    
    
    
    
    
    
            return result;
        }
    
        @SuppressWarnings("unchecked")
        @Override
        protected final void encode(org.chromium.mojo.bindings.Encoder encoder) {
    
            org.chromium.mojo.bindings.Encoder encoder0 = encoder.getEncoderAtDataOffset(DEFAULT_STRUCT_INFO);
    
    
    
            
            
            encoder0.encode(id, 8);
            
    
    
    
    
    
    
    
    
    
            
            
            encoder0.encode(pid, 12);
            
    
    
    
    
    
    
    
    
        }
    
        /**
         * @see Object#equals(Object)
         */
        @Override
        public boolean equals(Object object) {
            if (object == this)
                return true;
            if (object == null)
                return false;
            if (getClass() != object.getClass())
                return false;
    
            ApplicationManagerListenerApplicationPidAvailableParams other = (ApplicationManagerListenerApplicationPidAvailableParams) object;
    
            if (this.id != other.id)
                return false;
    
            if (this.pid != other.pid)
                return false;
    
    
            return true;
        }
    
        /**
         * @see Object#hashCode()
         */
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = prime + getClass().hashCode();
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(id);
    
            result = prime * result + org.chromium.mojo.bindings.BindingsHelper.hashCode(pid);
    
            return result;
        }
    }



}
